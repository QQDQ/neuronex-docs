{
  "openapi": "3.1.0",
  "info": {
    "title": "NeuronEX-swagger-zh",
    "description": "",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "NeuronEX"
    },
    {
      "name": "NeuronEX/license"
    },
    {
      "name": "NeuronEX/ekuiper_plugin"
    },
    {
      "name": "NeuronEX/tunnel"
    },
    {
      "name": "NeuronEX/server"
    },
    {
      "name": "NeuronEX/management"
    },
    {
      "name": "NeuronEX/liveness"
    },
    {
      "name": "NeuronEX/log"
    },
    {
      "name": "NeuronEX/template"
    },
    {
      "name": "NeuronEX/process_control"
    },
    {
      "name": "NeuronEX/status"
    },
    {
      "name": "NeuronEX/sse"
    },
    {
      "name": "NeuronEX/sso"
    },
    {
      "name": "NeuronEX/monitor"
    },
    {
      "name": "Neuron"
    },
    {
      "name": "Neuron/configuration"
    }
  ],
  "paths": {
    "/api/license": {
      "get": {
        "summary": "Get License Information",
        "x-apifox-folder": "NeuronEX/license",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "GetLicenseInfo",
        "tags": [
          "NeuronEX/license"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "licenseType": "TRIAL",
                      "customerName": "EMQ Technologies Inc.",
                      "customerContact": "support@emqx.io",
                      "startDate": "2023-12-06 03:28:25",
                      "expiredDate": "2123-12-06 03:28:25",
                      "expired": false,
                      "totalTagCount": 30,
                      "usedTagCount": 0,
                      "enabledPlugins": [
                        "ABB COMLI",
                        "Allen-Bradley ControlLogix 5500",
                        "Allen-Bradley DF1",
                        "Allen-Bradley MicroLogix 1400",
                        "BACnet/IP",
                        "Beckhoff ADS",
                        "DLT645-1997",
                        "DLT645-2007",
                        "EtherNet/IP(CIP)",
                        "GE SRTP",
                        "HJ212-2017",
                        "HOSTLINK CMODE",
                        "IEC60870-5-104",
                        "IEC61850",
                        "Inovance Modbus TCP",
                        "KNXnet/IP",
                        "KUKA ETHERNET KRL TCP",
                        "Mitsubishi 1E",
                        "Mitsubishi 3E",
                        "Mitsubishi FX",
                        "Modbus RTU",
                        "Modbus TCP",
                        "Modbus TCP QH",
                        "NON A11",
                        "OPC UA",
                        "Omron FINS TCP",
                        "Omron FINS UDP",
                        "Panasonic Mewtocol",
                        "Profinet IO",
                        "SECS GEM HSMS",
                        "Siemens FetchWrite",
                        "Siemens RK512",
                        "Siemens S7 ISOTCP",
                        "Siemens S7 ISOTCP for 300/400",
                        "SparkPlugB",
                        "WebSocket"
                      ],
                      "hardwareToken": "FdVCScD63F5gGcB0eO5OuwQsxg5jJoa+YOxyOub9c5g=",
                      "ekuiperOn": true,
                      "officialEmail": "support@emqx.io"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076715-run"
      },
      "post": {
        "summary": "Upload License",
        "x-apifox-folder": "NeuronEX/license",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "UploadLicense",
        "tags": [
          "NeuronEX/license"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "x-apifox-ignore-properties": [],
                "x-apifox-orders": []
              },
              "example": {
                "license": "CAIaFUVNUSBUZWNobm9s..."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "type": "TRIAL",
                      "customerName": "EMQ Technologies Inc.",
                      "customerContact": "support@emqx.io",
                      "startDate": "2023-12-06",
                      "expiredDate": "2123-12-06",
                      "expired": false,
                      "totalTagCount": 1000,
                      "usedTagCount": 1,
                      "enabledPlugins": [
                        "ABB COMLI",
                        "Allen-Bradley ControlLogix 5500",
                        "Allen-Bradley DF1",
                        "Allen-Bradley MicroLogix 1400",
                        "BACnet/IP",
                        "Beckhoff ADS",
                        "DLT645-1997",
                        "DLT645-2007",
                        "EtherNet/IP(CIP)",
                        "GE SRTP",
                        "HJ212-2017",
                        "HOSTLINK CMODE",
                        "IEC60870-5-104",
                        "IEC61850",
                        "Inovance Modbus TCP",
                        "KNXnet/IP",
                        "KUKA ETHERNET KRL TCP",
                        "Mitsubishi 1E",
                        "Mitsubishi 3E",
                        "Mitsubishi FX",
                        "Modbus RTU",
                        "Modbus TCP",
                        "Modbus TCP QH",
                        "NON A11",
                        "OPC UA",
                        "Omron FINS TCP",
                        "Omron FINS UDP",
                        "Panasonic Mewtocol",
                        "Profinet IO",
                        "SECS GEM HSMS",
                        "Siemens FetchWrite",
                        "Siemens RK512",
                        "Siemens S7 ISOTCP",
                        "Siemens S7 ISOTCP for 300/400",
                        "SparkPlugB",
                        "WebSocket"
                      ],
                      "hardwareToken": "",
                      "ekuiperOn": true,
                      "officialEmail": "support@emqx.io"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076716-run"
      }
    },
    "/api/license/activation_code": {
      "post": {
        "summary": "Register the activation code and automatically import the eco-license.",
        "x-apifox-folder": "NeuronEX/license",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "RegisterActivationCode",
        "tags": [
          "NeuronEX/license"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "x-apifox-ignore-properties": [],
                "x-apifox-orders": []
              },
              "example": {
                "activationCode": "6YnJBVBOcL2pBQgwnPdtdtW..."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                }
              }
            }
          },
          "204": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076717-run"
      }
    },
    "/api/license/floating": {
      "post": {
        "summary": "ECP deliver floating license to NeuronEX",
        "x-apifox-folder": "NeuronEX/license",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "DeliverFloatingLicense",
        "tags": [
          "NeuronEX/license"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "x-apifox-ignore-properties": [],
                "x-apifox-orders": []
              },
              "example": {
                "license": "CAIaFUVNUSBUZWNobm9s..."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                }
              }
            }
          },
          "204": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076718-run"
      }
    },
    "/api/license/tag": {
      "get": {
        "summary": "Get the number of tags in use",
        "x-apifox-folder": "NeuronEX/license",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "GetUsedTag",
        "tags": [
          "NeuronEX/license"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076719-run"
      },
      "post": {
        "summary": "Deliver Tag When NeuronEx is managed by ECP.",
        "x-apifox-folder": "NeuronEX/license",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "DeliverTag",
        "tags": [
          "NeuronEX/license"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "x-apifox-ignore-properties": [],
                "x-apifox-orders": []
              },
              "example": {
                "license": "CAIaFUVNUSBUZWNobm9s..."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                }
              }
            }
          },
          "204": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076720-run"
      },
      "delete": {
        "summary": "ECP assigns 0 tags to NeuronEX or unmanages NeuronEX",
        "x-apifox-folder": "NeuronEX/license",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "RemoveVirtualLicense",
        "tags": [
          "NeuronEX/license"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          },
          "204": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076721-run"
      }
    },
    "/api/plugin/portable": {
      "post": {
        "summary": "Create ekuiper plugin ",
        "x-apifox-folder": "NeuronEX/ekuiper_plugin",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "NeuronEX/ekuiper_plugin"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "operationId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "address",
                  "name",
                  "operationId"
                ],
                "x-apifox-orders": [
                  "address",
                  "name",
                  "operationId"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "address": "http://127.0.0.1:9081",
                "name": "123456",
                "operationId": 10
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076722-run"
      }
    },
    "/api/ek_service": {
      "post": {
        "summary": "Create external service",
        "x-apifox-folder": "NeuronEX/ekuiper_plugin",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "NeuronEX/ekuiper_plugin"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "headers": {
                    "type": "object",
                    "properties": {},
                    "x-apifox-orders": [],
                    "x-apifox-ignore-properties": []
                  }
                },
                "required": [
                  "name",
                  "address",
                  "headers"
                ],
                "x-apifox-orders": [
                  "name",
                  "address",
                  "headers"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "name": "test",
                "address": "http://127.0.0.1:9081",
                "headers": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076723-run"
      }
    },
    "/api/ek_service/%24{serviceName}": {
      "delete": {
        "summary": "Delete  external service ",
        "x-apifox-folder": "NeuronEX/ekuiper_plugin",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "NeuronEX/ekuiper_plugin"
        ],
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076724-run"
      }
    },
    "/api/tunnel": {
      "get": {
        "summary": "Get ECP Tunnel Config info",
        "x-apifox-folder": "NeuronEX/tunnel",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "NeuronEX/tunnel"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enable": {
                      "type": "boolean"
                    },
                    "enableSSL": {
                      "type": "boolean"
                    },
                    "registerId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "enable",
                    "enableSSL",
                    "registerId"
                  ],
                  "x-apifox-orders": [
                    "enable",
                    "enableSSL",
                    "registerId"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "enable": false,
                      "enableSSL": false,
                      "registerId": "dc3e97118e33-1115b9328bfb58948407"
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076725-run"
      },
      "post": {
        "summary": "ECP Tunnel configuration",
        "x-apifox-folder": "NeuronEX/tunnel",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "NeuronEX/tunnel"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enable": {
                    "type": "boolean"
                  },
                  "enableSSL": {
                    "type": "boolean"
                  },
                  "address": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "certificationRaw": {
                    "type": "string"
                  },
                  "privateKeyRaw": {
                    "type": "string"
                  },
                  "rootCARaw": {
                    "type": "string"
                  },
                  "registerId": {
                    "type": "string"
                  }
                },
                "required": [
                  "enable",
                  "enableSSL",
                  "address",
                  "username",
                  "password",
                  "description",
                  "certificationRaw",
                  "privateKeyRaw",
                  "rootCARaw",
                  "registerId"
                ],
                "x-apifox-orders": [
                  "enable",
                  "enableSSL",
                  "address",
                  "username",
                  "password",
                  "description",
                  "certificationRaw",
                  "privateKeyRaw",
                  "rootCARaw",
                  "registerId"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "enable": false,
                "enableSSL": false,
                "address": "tcp://127.0.0.1:1883",
                "username": "admin",
                "password": "password",
                "description": "test",
                "certificationRaw": "cert_base64",
                "privateKeyRaw": "key_base64",
                "rootCARaw": "ca_base64",
                "registerId": "1234567890"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076726-run"
      }
    },
    "/api/login": {
      "post": {
        "summary": "Login",
        "x-apifox-folder": "NeuronEX/server",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "loginHandler",
        "tags": [
          "NeuronEX/server"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "x-apifox-ignore-properties": [],
                "x-apifox-orders": []
              },
              "example": {
                "name": "admin",
                "password": "0000"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "token": "eyJhbGciOiJ....",
                      "role": "Administrator"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Username or Password incorrect!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076727-run"
      }
    },
    "/api/users/password/{name}": {
      "put": {
        "summary": "Change password",
        "x-apifox-folder": "NeuronEX/server",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "passwordChangeHandler",
        "tags": [
          "NeuronEX/server"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "username to be deleted",
            "required": true,
            "example": "test",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "x-apifox-ignore-properties": [],
                "x-apifox-orders": []
              },
              "example": {
                "name": "test",
                "old_password": "0000",
                "new_password": "1111"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076728-run"
      }
    },
    "/api/users": {
      "post": {
        "summary": "Creat New User",
        "x-apifox-folder": "NeuronEX/server",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "newUserHandler",
        "tags": [
          "NeuronEX/server"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "x-apifox-ignore-properties": [],
                "x-apifox-orders": []
              },
              "example": {
                "name": "test",
                "password": "test",
                "role": "Viewer",
                "description": "create new user test and set him to viewer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076729-run"
      }
    },
    "/api/users/role/{name}": {
      "put": {
        "summary": "Change role",
        "x-apifox-folder": "NeuronEX/server",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "roleChangeHandler",
        "tags": [
          "NeuronEX/server"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "username to be deleted",
            "required": true,
            "example": "test",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "x-apifox-ignore-properties": [],
                "x-apifox-orders": []
              },
              "example": {
                "name": "test",
                "role": "Viewer",
                "description": "change user test's role to viewer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076730-run"
      }
    },
    "/api/users/{name}": {
      "delete": {
        "summary": "Delete User",
        "x-apifox-folder": "NeuronEX/server",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "deleteUserHandler",
        "tags": [
          "NeuronEX/server"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "username to be deleted",
            "required": true,
            "example": "test",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076731-run"
      }
    },
    "/api/system": {
      "get": {
        "summary": "Get system information",
        "x-apifox-folder": "NeuronEX/server",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "querySystemInfo",
        "tags": [
          "NeuronEX/server"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "version": "3.1.0-beta.3",
                      "systemStatus": "0",
                      "neuronRunningTime": "6332",
                      "neuronStatus": "0",
                      "neuronMemoryUsed": "8364032",
                      "neuronMemoryTotal": "4125425664",
                      "ekuiperRunningTime": "6332",
                      "ekuiperStatus": "0",
                      "ekuiperMemoryUsed": "84316160",
                      "ekuiperMemoryTotal": "4125425664",
                      "submoduleStatus": {
                        "alert": false,
                        "monitor": false,
                        "syslog": false
                      },
                      "hwToken": "m/djk5abRRToVTyBBCXkUVyMumgbYmo2PdwdjnVeqn8=",
                      "os": "Debian GNU/Linux 11",
                      "kernel": "5.10.124-linuxkit",
                      "arch": "x86_64",
                      "clib": "glibc-2.31"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076732-run"
      }
    },
    "/api/version": {
      "get": {
        "summary": "Gett NeuronEX version information",
        "x-apifox-folder": "NeuronEX/server",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "queryVersion",
        "tags": [
          "NeuronEX/server"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "version": "3.1.0-beta.3"
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076733-run"
      }
    },
    "/api/webhook/syslog": {
      "get": {
        "summary": "Get NeuronEX Log Remote Forwarding Configuration",
        "x-apifox-folder": "NeuronEX/server",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "syslogForwardConfig",
        "tags": [
          "NeuronEX/server"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "enabled": false,
                      "network": "udp4",
                      "addr": "",
                      "priority": 6,
                      "tag": "neuronex"
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076734-run"
      },
      "post": {
        "summary": "Update NeuronEX Log Remote Forwarding Configuration",
        "x-apifox-folder": "NeuronEX/server",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "syslogWebHook",
        "tags": [
          "NeuronEX/server"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "x-apifox-ignore-properties": [],
                "x-apifox-orders": []
              },
              "example": {
                "enabled": true,
                "addr": "localhost:10514",
                "priority": 6,
                "tag": "neuronex"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076735-run"
      }
    },
    "/api/sso/{serverName}": {
      "put": {
        "summary": "Update an SSO configuration",
        "x-apifox-folder": "NeuronEX/server",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "UpdateSSOConfig",
        "tags": [
          "NeuronEX/server"
        ],
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "x-apifox-ignore-properties": [],
                "x-apifox-orders": []
              },
              "example": {
                "name": "sso1",
                "url": "https://iamnew.ctwing.cn",
                "clientId": "VDx2v0usxxx",
                "clientSecret": "1uu9c5xxxx",
                "type": "oauth2",
                "enabled": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          },
          "400": {
            "description": "@ErrorInfo(1002,\"Request body invalid\")\n@ErrorInfo(19001,\"Update ssoConfiguration failed\")\n@ErrorInfo(19002,\"Configuration name not found in the query\")\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076736-run"
      },
      "get": {
        "summary": "Get an SSO configuration",
        "x-apifox-folder": "NeuronEX/sso",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "QuerySSOConfig",
        "tags": [
          "NeuronEX/sso"
        ],
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "name": "sso1",
                      "url": "https://iamnew.ctwing.cn",
                      "clientId": "VDx2v0usxxx",
                      "clientSecret": "1uu9c5xxxx",
                      "type": "oauth2",
                      "enabled": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "@ErrorInfo(19002,\"Configuration name not found in the query\")\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076760-run"
      },
      "delete": {
        "summary": "Delete an SSO configuration",
        "x-apifox-folder": "NeuronEX/sso",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "DeleteSSOConfig",
        "tags": [
          "NeuronEX/sso"
        ],
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          },
          "400": {
            "description": "@ErrorInfo(19003,\"Delete ssoConfiguration failed\")\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076761-run"
      }
    },
    "/api/management/cancel": {
      "post": {
        "summary": "Cancel being Managed by ECP",
        "x-apifox-folder": "NeuronEX/management",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "CancelManagement",
        "tags": [
          "NeuronEX/management"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076737-run"
      }
    },
    "/api/liveness/report": {
      "get": {
        "summary": "Query liveness info",
        "x-apifox-folder": "NeuronEX/liveness",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "GetLivenessConfig",
        "tags": [
          "NeuronEX/liveness"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "endpointUrl": "",
                      "serviceId": "",
                      "interval": 0
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076738-run"
      },
      "post": {
        "summary": "Liveness configuration",
        "x-apifox-folder": "NeuronEX/liveness",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "livenessConfigHandler",
        "tags": [
          "NeuronEX/liveness"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "x-apifox-ignore-properties": [],
                "x-apifox-orders": []
              },
              "example": {
                "endpointUrl": "127.0.0.1:1456",
                "serviceId": "123456",
                "interval": 10
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076739-run"
      }
    },
    "/api/log": {
      "get": {
        "summary": "Get NeuronEX log level configuration",
        "x-apifox-folder": "NeuronEX/log",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "LoglevelGetting",
        "tags": [
          "NeuronEX/log"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "level": "info"
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076740-run"
      },
      "post": {
        "summary": "Set NeuronEX log level configuration",
        "x-apifox-folder": "NeuronEX/log",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "LoglevelSetting",
        "tags": [
          "NeuronEX/log"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "x-apifox-ignore-properties": [],
                "x-apifox-orders": []
              },
              "example": {
                "level": "info"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076741-run"
      }
    },
    "/api/log/ekuiper": {
      "get": {
        "summary": "Download data processing engine log",
        "x-apifox-folder": "NeuronEX/log",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "DownloadEkuiperLog",
        "tags": [
          "NeuronEX/log"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": "log ..."
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076742-run"
      }
    },
    "/api/log/neuron": {
      "get": {
        "summary": "Download data collection engine log",
        "x-apifox-folder": "NeuronEX/log",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "DownloadNeuronLog",
        "tags": [
          "NeuronEX/log"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": "log ..."
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076743-run"
      }
    },
    "/api/log/neuron/{nodeName}": {
      "get": {
        "summary": "Download the log of data collection engine driver node",
        "x-apifox-folder": "NeuronEX/log",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "DownloadNeuronLogByNodeName",
        "tags": [
          "NeuronEX/log"
        ],
        "parameters": [
          {
            "name": "nodeName",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": "log ..."
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076744-run"
      }
    },
    "/api/log/neuronex": {
      "get": {
        "summary": "Download NeuronEX  log",
        "x-apifox-folder": "NeuronEX/log",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "DownloadNeuronexLog",
        "tags": [
          "NeuronEX/log"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": "log ..."
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076745-run"
      }
    },
    "/api/template": {
      "get": {
        "summary": "Export Global Configuration Template",
        "x-apifox-folder": "NeuronEX/template",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "Export",
        "tags": [
          "NeuronEX/template"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "Category 1: ekuiper, 2: neuron",
            "required": true,
            "example": "",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nodes",
            "in": "query",
            "description": "List of nodes to be queried",
            "required": false,
            "example": "south1,south3",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rules",
            "in": "query",
            "description": "List of rules to be queried",
            "required": false,
            "example": "rule1,rule2",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "query neuron  template sueccess",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "streams": {
                      "type": "object",
                      "properties": {
                        "neuronStream": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "neuronStream"
                      ],
                      "x-apifox-orders": [
                        "neuronStream"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "tables": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-orders": [],
                      "x-apifox-ignore-properties": []
                    },
                    "rules": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-orders": [],
                      "x-apifox-ignore-properties": []
                    },
                    "nativePlugins": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-orders": [],
                      "x-apifox-ignore-properties": []
                    },
                    "portablePlugins": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-orders": [],
                      "x-apifox-ignore-properties": []
                    },
                    "sourceConfig": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-orders": [],
                      "x-apifox-ignore-properties": []
                    },
                    "sinkConfig": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-orders": [],
                      "x-apifox-ignore-properties": []
                    },
                    "connectionConfig": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-orders": [],
                      "x-apifox-ignore-properties": []
                    },
                    "Service": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-orders": [],
                      "x-apifox-ignore-properties": []
                    },
                    "Schema": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-orders": [],
                      "x-apifox-ignore-properties": []
                    },
                    "uploads": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-orders": [],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "required": [
                    "streams",
                    "tables",
                    "rules",
                    "nativePlugins",
                    "portablePlugins",
                    "sourceConfig",
                    "sinkConfig",
                    "connectionConfig",
                    "Service",
                    "Schema",
                    "uploads"
                  ],
                  "x-apifox-orders": [
                    "streams",
                    "tables",
                    "rules",
                    "nativePlugins",
                    "portablePlugins",
                    "sourceConfig",
                    "sinkConfig",
                    "connectionConfig",
                    "Service",
                    "Schema",
                    "uploads"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "ekuiper success",
                    "value": {
                      "streams": {
                        "neuronStream": "CREATE STREAM neuronStream() WITH (TYPE=\"neuron\",FORMAT=\"json\",CONF_KEY=\"default\",SHARED=\"TRUE\");"
                      },
                      "tables": {},
                      "rules": {},
                      "nativePlugins": {},
                      "portablePlugins": {},
                      "sourceConfig": {},
                      "sinkConfig": {},
                      "connectionConfig": {},
                      "Service": {},
                      "Schema": {},
                      "uploads": {}
                    }
                  }
                }
              }
            }
          },
          "x-200:query ekuiper template sueccess": {
            "description": "query ekuiper template sueccess",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nodes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "plugin": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "x-apifox-orders": [
                          "plugin",
                          "name"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "subscriptions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "settings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "node": {
                            "type": "string"
                          },
                          "params": {
                            "type": "object",
                            "properties": {
                              "host": {
                                "type": "string"
                              },
                              "port": {
                                "type": "integer"
                              }
                            },
                            "required": [
                              "host",
                              "port"
                            ],
                            "x-apifox-orders": [
                              "host",
                              "port"
                            ],
                            "x-apifox-ignore-properties": []
                          }
                        },
                        "x-apifox-orders": [
                          "node",
                          "params"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    }
                  },
                  "required": [
                    "nodes",
                    "groups",
                    "tags",
                    "subscriptions",
                    "settings"
                  ],
                  "x-apifox-orders": [
                    "nodes",
                    "groups",
                    "tags",
                    "subscriptions",
                    "settings"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "query ekuiper template sueccess",
                    "value": {
                      "nodes": [
                        {
                          "plugin": "eKuiper",
                          "name": "Processing"
                        }
                      ],
                      "groups": [],
                      "tags": [],
                      "subscriptions": [],
                      "settings": [
                        {
                          "node": "Processing",
                          "params": {
                            "host": "127.0.0.1",
                            "port": 7081
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076746-run"
      },
      "post": {
        "summary": "Deliver Global Configuration Template",
        "x-apifox-folder": "NeuronEX/template",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "Deliver",
        "tags": [
          "NeuronEX/template"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "Category 1: ekuiper, 2: neuron ",
            "required": true,
            "example": "",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template": {
                    "type": "string",
                    "description": "optional, Node data to be deliver if category is 1, or rule data to be deliver if category is 2 "
                  },
                  "ruleData": {
                    "type": "string",
                    "description": "optional, Rule data to be deliver "
                  },
                  "NodeData": {
                    "type": "string",
                    "description": "optional, Node data to be deliver "
                  },
                  "operationId": {
                    "type": "integer",
                    "description": "optional,if operationId > 0, The operation will be logged and pushed"
                  }
                },
                "x-apifox-orders": [
                  "template",
                  "ruleData",
                  "NodeData",
                  "operationId"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "template": "{\n    \"streams\": {\n        \"neuronStream\": \"CREATE STREAM neuronStream() WITH (TYPE=\\\"neuron\\\",FORMAT=\\\"json\\\",CONF_KEY=\\\"default\\\",SHARED=\\\"TRUE\\\");\"\n    },\n    \"tables\": {},\n    \"rules\": {},\n    \"nativePlugins\": {},\n    \"portablePlugins\": {},\n    \"sourceConfig\": {},\n    \"sinkConfig\": {},\n    \"connectionConfig\": {},\n    \"Service\": {},\n    \"Schema\": {},\n    \"uploads\": {}\n}"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          },
          "400": {
            "description": "Deliver failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "failed reason message"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "x-apifox-orders": [
                    "message"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Json format err",
                    "value": {
                      "message": "Json format err"
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076747-run"
      }
    },
    "/api/process/ekuiper/start": {
      "get": {
        "summary": "Start ekuiper process",
        "x-apifox-folder": "NeuronEX/process_control",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "StartKuiper",
        "tags": [
          "NeuronEX/process_control"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076748-run"
      }
    },
    "/api/process/ekuiper/stop": {
      "get": {
        "summary": "Stop ekuiper process",
        "x-apifox-folder": "NeuronEX/process_control",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "StopKuiper",
        "tags": [
          "NeuronEX/process_control"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076749-run"
      }
    },
    "/api/process/neuron/start": {
      "get": {
        "summary": "Start neuron process",
        "x-apifox-folder": "NeuronEX/process_control",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "StartNeuron",
        "tags": [
          "NeuronEX/process_control"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076750-run"
      }
    },
    "/api/process/neuron/stop": {
      "get": {
        "summary": "Stop neuron process",
        "x-apifox-folder": "NeuronEX/process_control",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "StopNeuron",
        "tags": [
          "NeuronEX/process_control"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076751-run"
      }
    },
    "/api/process/status": {
      "get": {
        "summary": "The status of Ekuiper and Neuron process",
        "x-apifox-folder": "NeuronEX/process_control",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "KuiperNeuronStatus",
        "tags": [
          "NeuronEX/process_control"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076752-run"
      }
    },
    "/api/status/liveness": {
      "get": {
        "summary": "Get NeuronEX liveness status",
        "x-apifox-folder": "NeuronEX/status",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "LiveStatusGetting",
        "tags": [
          "NeuronEX/status"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "liveness": {
                      "type": "object",
                      "properties": {
                        "in": {
                          "type": "integer"
                        },
                        "out": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "in",
                        "out"
                      ],
                      "x-apifox-orders": [
                        "in",
                        "out"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "required": [
                    "liveness"
                  ],
                  "x-apifox-orders": [
                    "liveness"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "liveness": {
                        "in": 853,
                        "out": 0
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076753-run"
      }
    },
    "/api/status/log": {
      "get": {
        "summary": "Get NeuronEX syslog status",
        "x-apifox-folder": "NeuronEX/status",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "SyslogStatusGetting",
        "tags": [
          "NeuronEX/status"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "server": {
                      "type": "object",
                      "properties": {
                        "in": {
                          "type": "integer"
                        },
                        "out": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "in",
                        "out"
                      ],
                      "x-apifox-orders": [
                        "in",
                        "out"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "outSend": {
                      "type": "object",
                      "properties": {
                        "in": {
                          "type": "integer"
                        },
                        "out": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "in",
                        "out"
                      ],
                      "x-apifox-orders": [
                        "in",
                        "out"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "sse": {
                      "type": "object",
                      "properties": {
                        "in": {
                          "type": "integer"
                        },
                        "out": {
                          "type": "integer"
                        },
                        "neuron": {
                          "type": "object",
                          "properties": {
                            "in": {
                              "type": "integer"
                            },
                            "out": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "in",
                            "out"
                          ],
                          "x-apifox-orders": [
                            "in",
                            "out"
                          ],
                          "x-apifox-ignore-properties": []
                        },
                        "neuronex": {
                          "type": "object",
                          "properties": {
                            "in": {
                              "type": "integer"
                            },
                            "out": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "in",
                            "out"
                          ],
                          "x-apifox-orders": [
                            "in",
                            "out"
                          ],
                          "x-apifox-ignore-properties": []
                        },
                        "ekuiper": {
                          "type": "object",
                          "properties": {
                            "in": {
                              "type": "integer"
                            },
                            "out": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "in",
                            "out"
                          ],
                          "x-apifox-orders": [
                            "in",
                            "out"
                          ],
                          "x-apifox-ignore-properties": []
                        },
                        "others": {
                          "type": "object",
                          "properties": {
                            "in": {
                              "type": "integer"
                            },
                            "out": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "in",
                            "out"
                          ],
                          "x-apifox-orders": [
                            "in",
                            "out"
                          ],
                          "x-apifox-ignore-properties": []
                        },
                        "clientNumber": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "in",
                        "out",
                        "neuron",
                        "neuronex",
                        "ekuiper",
                        "others",
                        "clientNumber"
                      ],
                      "x-apifox-orders": [
                        "in",
                        "out",
                        "neuron",
                        "neuronex",
                        "ekuiper",
                        "others",
                        "clientNumber"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "required": [
                    "server",
                    "outSend",
                    "sse"
                  ],
                  "x-apifox-orders": [
                    "server",
                    "outSend",
                    "sse"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "server": {
                        "in": 75668145,
                        "out": 75668144
                      },
                      "outSend": {
                        "in": 75668145,
                        "out": 2513
                      },
                      "sse": {
                        "in": 75668145,
                        "out": 75668144,
                        "neuron": {
                          "in": 464,
                          "out": 464
                        },
                        "neuronex": {
                          "in": 75665075,
                          "out": 75665074
                        },
                        "ekuiper": {
                          "in": 93,
                          "out": 93
                        },
                        "others": {
                          "in": 2513,
                          "out": 2513
                        },
                        "clientNumber": 0
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076754-run"
      }
    },
    "/api/status/ecp_tunnel": {
      "get": {
        "summary": "Get ecp tunnel status",
        "x-apifox-folder": "NeuronEX/status",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Get ecp tunnel status",
        "tags": [
          "NeuronEX/status"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "tunnel status,value can be init,idle,subscribe serviceId,subscribe revoke serviceId,activating,subscribe configuration,revoke serviceId,ECP config modified."
                    }
                  },
                  "required": [
                    "status"
                  ],
                  "x-apifox-orders": [
                    "status"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "init"
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076755-run"
      }
    },
    "/api/stream/log": {
      "get": {
        "summary": "Get NeuronEX streaming log",
        "x-apifox-folder": "NeuronEX/sse",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "StreamingLog",
        "tags": [
          "NeuronEX/sse"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "example": "0",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "description": "",
            "required": false,
            "example": "10",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076756-run"
      }
    },
    "/api/stream/clients": {
      "get": {
        "summary": "Get stream client status",
        "x-apifox-folder": "NeuronEX/sse",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Get stream client status",
        "tags": [
          "NeuronEX/sse"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "clientAddress": {
                        "type": "string"
                      }
                    },
                    "x-apifox-orders": [
                      "clientAddress"
                    ],
                    "x-apifox-ignore-properties": []
                  }
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": [
                      {
                        "clientAddress": "127.0.0.1:9081"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076757-run"
      }
    },
    "/api/sso": {
      "get": {
        "summary": "Get all SSO configurations",
        "x-apifox-folder": "NeuronEX/sso",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "QuerySSOConfigs",
        "tags": [
          "NeuronEX/sso"
        ],
        "parameters": [
          {
            "name": "enabled",
            "in": "query",
            "description": "Optional, query configurations by 'enabled' field",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "clientId": {
                        "type": "string"
                      },
                      "clientSecret": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      }
                    },
                    "required": [
                      "name",
                      "url",
                      "clientId",
                      "clientSecret",
                      "type",
                      "enabled"
                    ],
                    "x-apifox-orders": [
                      "name",
                      "url",
                      "clientId",
                      "clientSecret",
                      "type",
                      "enabled"
                    ],
                    "x-apifox-ignore-properties": []
                  }
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": [
                      {
                        "name": "sso1",
                        "url": "https://iamnew.ctwing.cn",
                        "clientId": "8I744Myxxxx",
                        "clientSecret": "5jMnFyxxxx",
                        "type": "oauth2",
                        "enabled": true
                      },
                      {
                        "name": "sso2",
                        "url": "https://iamnew.ctwing.cn",
                        "clientId": "VDx2v0uxxxx",
                        "clientSecret": "1uu9c5xxxx",
                        "type": "oauth2",
                        "enabled": false
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "@ErrorInfo(1003,\"Request param invalid\")\n@ErrorInfo(19002,\"Configuration name not found in the query\")\n)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076758-run"
      },
      "post": {
        "summary": "Add a new SSO configuration",
        "x-apifox-folder": "NeuronEX/sso",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "SSOConfigHandler",
        "tags": [
          "NeuronEX/sso"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "x-apifox-ignore-properties": [],
                "x-apifox-orders": []
              },
              "example": {
                "name": "sso1",
                "url": "https://iamnew.ctwing.cn",
                "clientId": "VDx2v0usxxx",
                "clientSecret": "1uu9c5xxxx",
                "type": "oauth2",
                "enabled": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          },
          "400": {
            "description": "@ErrorInfo(1002,\"Request body invalid\")\n@ErrorInfo(19000,\"Add ssoConfiguration failed\")\n@ErrorInfo(19004,\"Configuration already exists\")\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076759-run"
      }
    },
    "/sso/{serverName}/oauth2": {
      "get": {
        "summary": "SSO Handling",
        "x-apifox-folder": "NeuronEX/sso",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "OAuth2Handler",
        "tags": [
          "NeuronEX/sso"
        ],
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "",
            "required": true,
            "example": "5068471130381875",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MzcyODcxNjMsImlhdCI6MTYzNzIwMDc2MywiaXNzIjoiRU1RIFRlY2hub2xvZ2llcyBDby4sIEx0ZCBBbGwgcmlnaHRzIHJlc2VydmVkLiIsInBhc3MiOiIwMDAwIiwidXNlciI6ImFkbWluIn0.2EZzPC9djErrCeYNrK2av0smh-eKxDYeyu7cW4MyknI"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "@ErrorInfo(19002,\"Configuration name not found in the query\")\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076762-run"
      }
    },
    "/api/monitor/alert": {
      "get": {
        "summary": "Alert types currently supported by NeuronEX",
        "x-apifox-folder": "NeuronEX/monitor",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "AlertRuleConfig",
        "tags": [
          "NeuronEX/monitor"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ruleId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "desc": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "ruleId",
                      "name",
                      "desc"
                    ],
                    "x-apifox-orders": [
                      "ruleId",
                      "name",
                      "desc"
                    ],
                    "x-apifox-ignore-properties": []
                  }
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": [
                      {
                        "ruleId": "1",
                        "name": "node_exception_alert",
                        "desc": "Data collection node exception alert"
                      },
                      {
                        "ruleId": "2",
                        "name": "rule_exception_alert",
                        "desc": "Data processing rule exception alert"
                      },
                      {
                        "ruleId": "3",
                        "name": "restart_alert",
                        "desc": "neuronex restart alert"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076763-run"
      }
    },
    "/api/monitor/alert_config": {
      "get": {
        "summary": "Query the current alert rule-related settings",
        "x-apifox-folder": "NeuronEX/monitor",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "QueryAlertRuleConfig",
        "tags": [
          "NeuronEX/monitor"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "webhookUrl": {
                      "type": "string"
                    },
                    "interval": {
                      "type": "integer"
                    },
                    "fireChecks": {
                      "type": "integer"
                    },
                    "resolveChecks": {
                      "type": "integer"
                    },
                    "alertsConfig": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "enabled",
                    "webhookUrl",
                    "interval",
                    "fireChecks",
                    "resolveChecks",
                    "alertsConfig"
                  ],
                  "x-apifox-orders": [
                    "enabled",
                    "webhookUrl",
                    "interval",
                    "fireChecks",
                    "resolveChecks",
                    "alertsConfig"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "enabled": true,
                      "webhookUrl": "https://www.baidu.com",
                      "interval": 15,
                      "fireChecks": 0,
                      "resolveChecks": 0,
                      "alertsConfig": [
                        {
                          "ruleId": "3",
                          "fireChecks": 1,
                          "resolveChecks": -1,
                          "ruleName": "restart_alert"
                        },
                        {
                          "ruleId": "1",
                          "fireChecks": 3,
                          "resolveChecks": 3,
                          "ruleName": "node_exception_alert"
                        },
                        {
                          "ruleId": "2",
                          "fireChecks": 1,
                          "resolveChecks": 1,
                          "ruleName": "rule_exception_alert"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076764-run"
      },
      "post": {
        "summary": "Configure Alert rule-related settings.",
        "x-apifox-folder": "NeuronEX/monitor",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "DistributeAlertRuleConfig",
        "tags": [
          "NeuronEX/monitor"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "false: disabled, true: enabled ,If the value is false, the other fields are non-required"
                  },
                  "webhookUrl": {
                    "type": "string",
                    "description": "required if enabled is true,the webhook that alert events are pushed to"
                  },
                  "interval": {
                    "type": "integer",
                    "description": "required if enabled is true"
                  },
                  "fireChecks": {
                    "type": "integer",
                    "description": "required if alertsConfig is empty, the default fireChecks for all rules in alertsConfig"
                  },
                  "resolveChecks": {
                    "type": "integer",
                    "description": "required if alertsConfig is empty, the default resolveChecks for all rules in alertsConfig"
                  },
                  "alertsConfig": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ruleId": {
                          "type": "string"
                        },
                        "fireChecks": {
                          "type": "integer",
                          "description": "how many consecutive monitoring times will trigger an alarm,means that N.Value must be greater than 0 unless ruleId=3, value can be -1"
                        },
                        "resolveChecks": {
                          "type": "integer",
                          "description": "how many times to monitor continuously, the alarm will be resumed,means that P.Value must be greater than 0 unless ruleId=3, value can be -1"
                        }
                      },
                      "x-apifox-orders": [
                        "ruleId",
                        "fireChecks",
                        "resolveChecks"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "description": "optional, the setting of the rule alerts to be pushed,if it is empty, it means that requires all alert types."
                  }
                },
                "required": [
                  "enabled",
                  "webhookUrl",
                  "interval"
                ],
                "x-apifox-orders": [
                  "enabled",
                  "webhookUrl",
                  "interval",
                  "fireChecks",
                  "resolveChecks",
                  "alertsConfig"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "enabled": true,
                "webhookUrl": "https://www.baidu.com",
                "interval": 15,
                "fireChecks": 0,
                "resolveChecks": 0,
                "alertsConfig": [
                  {
                    "ruleId": "3",
                    "fireChecks": 1,
                    "resolveChecks": -1
                  },
                  {
                    "ruleId": "1",
                    "fireChecks": 3,
                    "resolveChecks": 3
                  },
                  {
                    "ruleId": "2",
                    "fireChecks": 1,
                    "resolveChecks": 1
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076765-run"
      }
    },
    "/api/monitor/alert_result": {
      "get": {
        "summary": "Query recently generated alert events",
        "x-apifox-folder": "NeuronEX/monitor",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "QueryAlertResult",
        "tags": [
          "NeuronEX/monitor"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "firing": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ruleId": {
                            "type": "string"
                          },
                          "labels:": {
                            "type": "object",
                            "properties": {
                              "driver": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "driver"
                            ],
                            "x-apifox-orders": [
                              "driver"
                            ],
                            "x-apifox-ignore-properties": []
                          }
                        },
                        "x-apifox-orders": [
                          "ruleId",
                          "labels:"
                        ],
                        "x-apifox-ignore-properties": []
                      },
                      "description": "alert fire event array"
                    },
                    "resolved": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ruleId": {
                            "type": "string"
                          },
                          "labels:": {
                            "type": "object",
                            "properties": {
                              "rule": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "rule"
                            ],
                            "x-apifox-orders": [
                              "rule"
                            ],
                            "x-apifox-ignore-properties": []
                          }
                        },
                        "x-apifox-orders": [
                          "ruleId",
                          "labels:"
                        ],
                        "x-apifox-ignore-properties": []
                      },
                      "description": "alert resolved event array"
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "firing",
                    "resolved",
                    "timestamp"
                  ],
                  "x-apifox-orders": [
                    "firing",
                    "resolved",
                    "timestamp"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "firing": [
                        {
                          "ruleId": "xxx",
                          "labels:": {
                            "driver": "xxx"
                          }
                        }
                      ],
                      "resolved": [
                        {
                          "ruleId": "xxx",
                          "labels:": {
                            "rule": "xxx"
                          }
                        }
                      ],
                      "timestamp": "2024-01-01T09:52:26.739266876+08:00"
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076766-run"
      }
    },
    "/api/monitor/metric": {
      "get": {
        "summary": "Metrics currently supported by NeuronEX",
        "x-apifox-folder": "NeuronEX/monitor",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "MetricConfig",
        "tags": [
          "NeuronEX/monitor"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "metricId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "desc": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "metricId",
                      "name",
                      "desc"
                    ],
                    "x-apifox-orders": [
                      "metricId",
                      "name",
                      "desc"
                    ],
                    "x-apifox-ignore-properties": []
                  }
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": [
                      {
                        "metricId": "1",
                        "name": "os_info",
                        "desc": "OS distro and kernel version"
                      },
                      {
                        "metricId": "2",
                        "name": "cpu_percent",
                        "desc": "Total CPU utilisation percentage"
                      },
                      {
                        "metricId": "3",
                        "name": "cpu_cores",
                        "desc": "Number of CPU cores"
                      },
                      {
                        "metricId": "4",
                        "name": "mem_total_bytes",
                        "desc": "Total installed memory in bytes"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076767-run"
      }
    },
    "/api/monitor/metric_config": {
      "get": {
        "summary": "Query the current metric-related settings",
        "x-apifox-folder": "NeuronEX/monitor",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "QueryMetricConfig",
        "tags": [
          "NeuronEX/monitor"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "prometheusUrl": {
                      "type": "string"
                    },
                    "interval": {
                      "type": "integer"
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "instance": {
                          "type": "string"
                        },
                        "org_id": {
                          "type": "string"
                        },
                        "project_id": {
                          "type": "string"
                        },
                        "service_id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "instance",
                        "org_id",
                        "project_id",
                        "service_id"
                      ],
                      "x-apifox-orders": [
                        "instance",
                        "org_id",
                        "project_id",
                        "service_id"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "metrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "metricId": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "desc": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "metricId",
                          "name",
                          "desc"
                        ],
                        "x-apifox-orders": [
                          "metricId",
                          "name",
                          "desc"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    }
                  },
                  "required": [
                    "enabled",
                    "prometheusUrl",
                    "interval",
                    "labels",
                    "metrics"
                  ],
                  "x-apifox-orders": [
                    "enabled",
                    "prometheusUrl",
                    "interval",
                    "labels",
                    "metrics"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "enabled": true,
                      "prometheusUrl": "http://127.0.0.1:9091",
                      "interval": 15,
                      "labels": {
                        "instance": "127.0.0.1:8111",
                        "org_id": "76995af8",
                        "project_id": "c1c69f9d",
                        "service_id": "55f20f8b"
                      },
                      "metrics": [
                        {
                          "metricId": "13",
                          "name": "north_nodes_total",
                          "desc": "Number of north nodes"
                        },
                        {
                          "metricId": "14",
                          "name": "north_running_nodes_total",
                          "desc": "Number of north nodes in running state"
                        },
                        {
                          "metricId": "15",
                          "name": "north_disconnected_nodes_total",
                          "desc": "Number of north nodes disconnected"
                        },
                        {
                          "metricId": "16",
                          "name": "south_nodes_total",
                          "desc": "Number of south nodes"
                        },
                        {
                          "metricId": "17",
                          "name": "south_running_nodes_total",
                          "desc": "Number of south nodes in running state"
                        },
                        {
                          "metricId": "20",
                          "name": "license_max_tags",
                          "desc": "License tags limit"
                        },
                        {
                          "metricId": "21",
                          "name": "license_used_tags",
                          "desc": "License total used tags"
                        },
                        {
                          "metricId": "1031",
                          "name": "kuiper_op_records_in_total",
                          "desc": "Total number of messages received by the operation of kuiper_op"
                        },
                        {
                          "metricId": "1032",
                          "name": "kuiper_op_records_out_total",
                          "desc": "Total number of messages published by the operation of kuiper_op"
                        },
                        {
                          "metricId": "2000",
                          "name": "running_nodes_total",
                          "desc": "Number of nodes in running state"
                        },
                        {
                          "metricId": "2001",
                          "name": "exception_nodes_total",
                          "desc": "Number of nodes in running state"
                        },
                        {
                          "metricId": "2002",
                          "name": "south_connected_nodes_total",
                          "desc": "Number of south nodes connected"
                        },
                        {
                          "metricId": "2003",
                          "name": "south_exception_nodes_total",
                          "desc": "Number of south in exception state"
                        },
                        {
                          "metricId": "2004",
                          "name": "north_connected_nodes_total",
                          "desc": "Number of north nodes connected"
                        },
                        {
                          "metricId": "2005",
                          "name": "north_exception_nodes_total",
                          "desc": "Number of north in exception state"
                        },
                        {
                          "metricId": "2006",
                          "name": "running_rules_total",
                          "desc": "Number of rules in running state"
                        },
                        {
                          "metricId": "2007",
                          "name": "stopped_rules_total",
                          "desc": "Number of rules in stopped state"
                        },
                        {
                          "metricId": "2008",
                          "name": "not_running_node",
                          "desc": "Node not in running state"
                        },
                        {
                          "metricId": "2009",
                          "name": "exception_node",
                          "desc": "Node in exception state"
                        },
                        {
                          "metricId": "3000",
                          "name": "not_running_rule",
                          "desc": "Rule not in running state"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076768-run"
      },
      "post": {
        "summary": "Configure Metric-related settings.",
        "x-apifox-folder": "NeuronEX/monitor",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "DistributeMetricConfig",
        "tags": [
          "NeuronEX/monitor"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "required,false: disabled, true: enabled ,If the value is false, the other fields are non-required"
                  },
                  "prometheusUrl": {
                    "type": "string",
                    "description": " required if enabled is true, the url of pushgateway,like http://localhost:9091"
                  },
                  "prometheusUsername": {
                    "type": "string",
                    "description": "optional, the url of username for pushgateway"
                  },
                  "prometheusPassword": {
                    "type": "string",
                    "description": " optional, the url of password for pushgateway"
                  },
                  "metricIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "optional, metric id array,a value of null means push all metric data."
                  },
                  "interval": {
                    "type": "integer",
                    "description": "required if enabled is true, the interval of generating metrics data,unit is second"
                  },
                  "labels": {
                    "type": "object",
                    "properties": {
                      "key1": {
                        "type": "string"
                      }
                    },
                    "x-apifox-orders": [
                      "key1"
                    ],
                    "description": "optional, additional labels needed for metric, will be pushed to pushgateway along with the metrics data for grouping of metrics,key: label name,value: label value",
                    "x-apifox-ignore-properties": []
                  }
                },
                "required": [
                  "enabled",
                  "prometheusUrl",
                  "interval"
                ],
                "x-apifox-orders": [
                  "enabled",
                  "prometheusUrl",
                  "prometheusUsername",
                  "prometheusPassword",
                  "metricIds",
                  "interval",
                  "labels"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "enabled": false,
                "prometheusUrl": "http://127.0.0.1:9091",
                "prometheusUsername": "",
                "prometheusPassword": "",
                "metricIds": [
                  "13",
                  "14",
                  "15",
                  "16",
                  "17",
                  "20",
                  "21",
                  "1031",
                  "1032",
                  "2000",
                  "2001",
                  "2002",
                  "2003",
                  "2004",
                  "2005",
                  "2006",
                  "2007",
                  "2008",
                  "2009",
                  "3000"
                ],
                "interval": 15,
                "labels": {
                  "category": "4",
                  "org_id": "ef5f285a",
                  "project_id": "c46ffe05",
                  "service_id": "25a967f3",
                  "type": "4"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076769-run"
      }
    },
    "/api/monitor/metric_contents": {
      "get": {
        "summary": "Query the most recent metric data",
        "x-apifox-folder": "NeuronEX/monitor",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "MetricContents",
        "tags": [
          "NeuronEX/monitor"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": "license_max_tags 30\nlicense_used_tags 0\nnorth_nodes_total 1\nnorth_running_nodes_total 1\nnorth_disconnected_nodes_total 1\nsouth_nodes_total 0\nsouth_running_nodes_total 0\nrunning_nodes_total 1\nexception_nodes_total 1\nsouth_connected_nodes_total 0\nsouth_exception_nodes_total 0\nnorth_connected_nodes_total 0\nnorth_exception_nodes_total 1\nrunning_rules_total 0\nstopped_rules_total 0\n"
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076770-run"
      }
    },
    "/api/neuron/node": {
      "post": {
        "summary": "Add Node",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Add Node",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "node name",
                    "type": "string",
                    "title": "node name"
                  },
                  "plugin": {
                    "type": "string",
                    "title": "plugin name"
                  },
                  "params": {
                    "type": "array",
                    "title": "setting (optional)",
                    "items": {
                      "type": "object",
                      "properties": {
                        "param1": {
                          "type": "integer",
                          "description": ""
                        },
                        "param2": {
                          "type": "string",
                          "description": ""
                        },
                        "param3": {
                          "type": "bool",
                          "description": ""
                        },
                        "param4": {
                          "type": "integer",
                          "description": ""
                        }
                      },
                      "x-apifox-orders": [
                        "param1",
                        "param2",
                        "param3",
                        "param4"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  }
                },
                "required": [
                  "name",
                  "plugin"
                ],
                "x-apifox-orders": [
                  "name",
                  "plugin",
                  "params"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "name": "modbus-tcp-node",
                "plugin": "Modbus TCP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "node type invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "node type invalid",
                    "value": {
                      "error": 2001
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "library not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "library not found",
                    "value": {
                      "error": 2301
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "node exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "node exist",
                    "value": {
                      "error": 2002
                    }
                  }
                }
              }
            }
          },
          "x-400:node setting invalid": {
            "description": "node setting invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "node setting invalid",
                    "value": {
                      "error": 2004
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076771-run"
      },
      "delete": {
        "summary": "Del node",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Delete node",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "node name"
                  }
                },
                "required": [
                  "name"
                ],
                "x-apifox-orders": [
                  "name"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "name": "modbus-tcp-node"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "node not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076772-run"
      },
      "get": {
        "summary": "Get node",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Get node",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of the node,type=1 means southbound node,type=2 means northbound node",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin",
            "in": "query",
            "description": "Plugin type of the node",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "node",
            "in": "query",
            "description": "Name of the node",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "node not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076773-run"
      },
      "put": {
        "summary": "Update node",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Update node",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "new_name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "new_name"
                ],
                "x-apifox-orders": [
                  "name",
                  "new_name"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "name": "modbus-node",
                "new_name": "modbus-tcp-node"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "node not allow update",
                    "value": {
                      "error": 2013
                    }
                  },
                  "2": {
                    "summary": "node name is empty",
                    "value": {
                      "error": 2015
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "node not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "node exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "node exist",
                    "value": {
                      "error": 2002
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "internal server error",
                    "value": {
                      "error": 1001
                    }
                  },
                  "2": {
                    "summary": "server is busy",
                    "value": {
                      "error": 1010
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076774-run"
      }
    },
    "/api/neuron/node/setting": {
      "get": {
        "summary": "Get Node Setting",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Get Node Setting",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "query",
            "description": "Node name",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "node": {
                      "type": "string"
                    },
                    "params": {
                      "type": "object",
                      "x-apifox-orders": [],
                      "properties": {},
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "node",
                    "params"
                  ],
                  "description": "//The parameter fields in json fill in different fields according to different plugins",
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "node": "modbus-node",
                      "params": {
                        "param1": "1.1.1.1",
                        "param2": 502
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "node not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076775-run"
      },
      "post": {
        "summary": "Node Setting",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Please refer to [Plugin Setting](https://docs.emqx.com/zh/neuronex/latest/api/plugin-setting.html) for the configuration parameters of each plugin.",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "node": {
                    "type": "string"
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "param1": {
                        "type": "integer"
                      },
                      "param2": {
                        "type": "string"
                      },
                      "param3": {
                        "type": "boolean"
                      },
                      "param4": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "param1",
                      "param2",
                      "param3",
                      "param4"
                    ],
                    "x-apifox-orders": [
                      "param1",
                      "param2",
                      "param3",
                      "param4"
                    ],
                    "description": "The parameter fields in json fill in different fields according to different plugins",
                    "x-apifox-ignore-properties": []
                  }
                },
                "required": [
                  "node",
                  "params"
                ],
                "x-apifox-orders": [
                  "node",
                  "params"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "node": "modbus-node",
                "params": {
                  "param1": 1,
                  "param2": "1.1.1.1",
                  "param3": true,
                  "param4": 11.22
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  },
                  "2": {
                    "summary": "node setting invalid",
                    "value": {
                      "error": 2004
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076776-run"
      }
    },
    "/api/neuron/node/ctl": {
      "post": {
        "summary": "Node CTL",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "node": {
                    "type": "string"
                  },
                  "cmd": {
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "0 start, 1 stop"
                  }
                },
                "x-apifox-orders": [
                  "node",
                  "cmd"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "node": "modbus-node",
                "cmd": 0
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "node not ready",
                    "value": {
                      "error": 2006
                    }
                  },
                  "2": {
                    "summary": "node is running",
                    "value": {
                      "error": 2007
                    }
                  },
                  "3": {
                    "summary": "node not running",
                    "value": {
                      "error": 2008
                    }
                  },
                  "4": {
                    "summary": "node is stopped",
                    "value": {
                      "error": 2009
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076777-run"
      }
    },
    "/api/neuron/node/state": {
      "get": {
        "summary": "Get Node State",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "query",
            "description": "Node name",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "states": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "node": {
                            "type": "string",
                            "description": "node name"
                          },
                          "running": {
                            "type": "integer",
                            "description": "running state"
                          },
                          "link": {
                            "type": "integer",
                            "description": "link state"
                          },
                          "rtt": {
                            "type": "integer",
                            "description": "average round trip time communicating with devices"
                          }
                        },
                        "x-apifox-orders": [
                          "node",
                          "running",
                          "link",
                          "rtt"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    }
                  },
                  "x-apifox-orders": [
                    "states"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "states": [
                        {
                          "node": "modbus-node1",
                          "running": 2,
                          "link": 1,
                          "rtt": 100
                        },
                        {
                          "node": "modbus-node2",
                          "running": 1,
                          "link": 0,
                          "rtt": 9999
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076778-run"
      }
    },
    "/api/neuron/group": {
      "post": {
        "summary": "Add Group",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "group": {
                    "type": "string",
                    "description": "group name"
                  },
                  "node": {
                    "type": "string",
                    "description": "node name"
                  },
                  "interval": {
                    "type": "integer",
                    "description": "read/upload interval(ms)"
                  }
                },
                "x-apifox-orders": [
                  "group",
                  "node",
                  "interval"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "group": "gconfig1",
                "node": "modbus-node",
                "interval": 10000
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "node not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "group not allow",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-orders": [],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "group not allow",
                    "value": {
                      "error": 2103
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076779-run"
      },
      "delete": {
        "summary": "Del Group",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "group": {
                    "type": "string",
                    "description": "group name"
                  },
                  "node": {
                    "type": "string",
                    "description": "node name"
                  }
                },
                "x-apifox-orders": [
                  "group",
                  "node"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "group": "gconfig1",
                "node": "modbus-node"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  },
                  "2": {
                    "summary": "group not exist",
                    "value": {
                      "error": 2106
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "group already subscribed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "group already subscribed",
                    "value": {
                      "error": 2101
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076780-run"
      },
      "put": {
        "summary": "Update Group",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "node": {
                    "type": "string",
                    "description": "node name"
                  },
                  "group": {
                    "type": "string",
                    "description": "group name"
                  },
                  "new_name": {
                    "type": "string",
                    "description": "group new name"
                  },
                  "interval": {
                    "type": "integer",
                    "description": "read/upload interval(ms)"
                  }
                },
                "x-apifox-orders": [
                  "node",
                  "group",
                  "new_name",
                  "interval"
                ],
                "required": [
                  "node",
                  "group"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "node": "modbus-node",
                "group": "gconfig1",
                "new_name": "group1",
                "interval": 10000
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  },
                  "2": {
                    "summary": "group not exist",
                    "value": {
                      "error": 2106
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "group exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "group exist",
                    "value": {
                      "error": 2104
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076781-run"
      },
      "get": {
        "summary": "Get Group",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "query",
            "description": "Node name",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "interval": {
                            "type": "integer"
                          },
                          "tag_count": {
                            "type": "integer"
                          }
                        },
                        "x-apifox-orders": [
                          "name",
                          "interval",
                          "tag_count"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    }
                  },
                  "x-apifox-orders": [
                    "groups"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "groups": [
                        {
                          "name": "config_modbus_tcp_sample_2",
                          "interval": 2000,
                          "tag_count": 0
                        },
                        {
                          "name": "gconfig1",
                          "interval": 10000,
                          "tag_count": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076782-run"
      }
    },
    "/api/neuron/tags": {
      "post": {
        "summary": "Add Tag",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "node": {
                    "type": "string"
                  },
                  "group": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "tag name"
                        },
                        "address": {
                          "type": "string",
                          "description": "tag address"
                        },
                        "attribute": {
                          "type": "integer",
                          "description": "tag attribute"
                        },
                        "type": {
                          "type": "integer",
                          "description": "tag type"
                        },
                        "precision": {
                          "type": "integer",
                          "optional": true,
                          "description": "optional, float/double precision, optional(0-17)"
                        },
                        "decimal": {
                          "type": "integer",
                          "optional": true,
                          "description": "optional, decimal"
                        },
                        "description": {
                          "type": "string",
                          "optional": true,
                          "description": "optional, description"
                        }
                      },
                      "x-apifox-orders": [
                        "name",
                        "address",
                        "attribute",
                        "type",
                        "precision",
                        "decimal",
                        "description"
                      ],
                      "required": [
                        "name",
                        "address",
                        "attribute",
                        "type"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  }
                },
                "x-apifox-orders": [
                  "node",
                  "group",
                  "tags"
                ],
                "required": [
                  "node",
                  "group"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "node": "modbus-node",
                "group": "config_modbus_tcp_sample_2",
                "tags": [
                  {
                    "name": "tag1",
                    "address": "1!400001",
                    "attribute": 8,
                    "type": 4,
                    "precision": 0,
                    "decimal": 0,
                    "description": "",
                    "value": 12
                  },
                  {
                    "name": "tag2",
                    "address": "1!00001",
                    "attribute": 3,
                    "type": 3,
                    "decimal": 0.01
                  },
                  {
                    "name": "tag3",
                    "address": "1!400009",
                    "attribute": 3,
                    "type": 9,
                    "precision": 3
                  },
                  {
                    "name": "static_tag",
                    "address": "",
                    "attribute": 10,
                    "type": 1,
                    "description": "It is a static tag",
                    "value": 42
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "index": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "index",
                    "error"
                  ],
                  "x-apifox-orders": [
                    "index",
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "index": 1,
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "206": {
            "description": "Partial Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "tag name conflict",
                    "value": {
                      "error": 2202
                    }
                  },
                  "2": {
                    "summary": "tag attribute not support",
                    "value": {
                      "error": 2203
                    }
                  },
                  "3": {
                    "summary": "tag type not support",
                    "value": {
                      "error": 2204
                    }
                  },
                  "4": {
                    "summary": "tag address format invalid",
                    "value": {
                      "error": 2205
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "node not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076783-run"
      },
      "get": {
        "summary": "Get Tag",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "query",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "tag type",
                            "type": "string"
                          },
                          "type": {
                            "description": "tag address",
                            "type": "integer"
                          },
                          "address": {
                            "description": "tag attribute",
                            "type": "string"
                          },
                          "attribute": {
                            "description": "description",
                            "type": "integer"
                          },
                          "description": {
                            "description": "float/double precision",
                            "type": "string"
                          },
                          "precision": {
                            "description": "decimal",
                            "type": "integer"
                          },
                          "decimal": {
                            "description": "optional, when the attribute is static",
                            "type": "integer"
                          },
                          "value": {
                            "type": "integer"
                          },
                          "precison": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "name",
                          "type",
                          "address",
                          "attribute",
                          "description",
                          "decimal",
                          "precison"
                        ],
                        "x-apifox-orders": [
                          "name",
                          "type",
                          "address",
                          "attribute",
                          "description",
                          "precision",
                          "decimal",
                          "value",
                          "precison"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    }
                  },
                  "required": [
                    "tags"
                  ],
                  "x-apifox-orders": [
                    "tags"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "tags": [
                        {
                          "name": "tag1",
                          "type": 8,
                          "address": "1!400001",
                          "attribute": 0,
                          "description": "",
                          "precision": 0,
                          "decimal": 0,
                          "value": 12
                        },
                        {
                          "name": "tag2",
                          "type": 6,
                          "address": "1!400002",
                          "attribute": 0,
                          "description": "",
                          "precision": 0,
                          "decimal": 0
                        },
                        {
                          "name": "static_tag",
                          "address": "",
                          "attribute": 10,
                          "type": 8,
                          "description": "",
                          "precision": 0,
                          "decimal": 0,
                          "value": 42
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "node not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076784-run"
      },
      "put": {
        "summary": "Update Tag",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "node": {
                    "description": "node name",
                    "type": "string"
                  },
                  "group": {
                    "type": "string",
                    "description": "group name"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "tag name",
                          "type": "string"
                        },
                        "type": {
                          "description": "tag type",
                          "type": "integer"
                        },
                        "attribute": {
                          "description": "tag attribute",
                          "type": "integer"
                        },
                        "address": {
                          "description": "tag address",
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "precision": {
                          "description": "float/double precison",
                          "type": "integer"
                        },
                        "decimal": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "name",
                        "type",
                        "attribute",
                        "address",
                        "description",
                        "decimal",
                        "precision"
                      ],
                      "x-apifox-orders": [
                        "name",
                        "type",
                        "attribute",
                        "address",
                        "description",
                        "precision",
                        "decimal"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  }
                },
                "required": [
                  "node",
                  "group",
                  "tags"
                ],
                "x-apifox-orders": [
                  "node",
                  "group",
                  "tags"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": "{\n    \"node\": \"modbus-tcp-test\",\n    \"group\": \"group1\",\n    \"tags\": [\n        {\n            \"name\": \"tag1\",\n            \"type\": 8,\n            \"attribute\": 0,\n            \"address\": \"1!400001\",\n            \"description\": \"\",\n            \"precision\": 0,\n            \"decimal\": 0,\n            \"value\": 12\n        },\n        {\n            \"name\": \"tag2\",\n            \"type\": 6,\n            \"attribute\": 0,\n            \"address\": \"1!400002\",\n            \"description\": \"\",\n            \"precison\": 0,\n            \"decimal\": 0,\n        },\n        {\n            \"name\": \"static_tag\",\n            \"address\": \"\",\n            \"attribute\": 10,\n            \"type\": 8,\n            \"description\": \"\",\n            \"precison\": 0,\n            \"decimal\": 0,\n            \"value\": 42\n        }\n    ]\n}"
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "integer"
                    },
                    "index": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "error",
                    "index"
                  ],
                  "x-apifox-orders": [
                    "error",
                    "index"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0,
                      "index": 1
                    }
                  }
                }
              }
            }
          },
          "206": {
            "description": "206",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "tag not exist",
                    "value": {
                      "error": 2201
                    }
                  },
                  "2": {
                    "summary": "tag name conflict",
                    "value": {
                      "error": 2202
                    }
                  },
                  "3": {
                    "summary": "tag attribute not support",
                    "value": {
                      "error": 2203
                    }
                  },
                  "4": {
                    "summary": "tag type not support",
                    "value": {
                      "error": 2204
                    }
                  },
                  "5": {
                    "summary": "tag address format invalid",
                    "value": {
                      "error": 2205
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "neuron node/group 404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "x-apifox-orders": [
                    "error"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  },
                  "2": {
                    "summary": "group not exist",
                    "value": {
                      "error": 2106
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076785-run"
      },
      "delete": {
        "summary": "Del Tag",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "group": {
                    "description": "group name",
                    "type": "string"
                  },
                  "node": {
                    "description": "node name",
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "tag name"
                  }
                },
                "required": [
                  "group",
                  "node",
                  "tags"
                ],
                "x-apifox-orders": [
                  "group",
                  "node",
                  "tags"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "group": "config_modbus_tcp_sample_2",
                "node": "modbus-node",
                "tags": [
                  "tag1",
                  "tag2"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "node not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076786-run"
      }
    },
    "/api/neuron/plugin": {
      "post": {
        "summary": "Add Plugin",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "library": {
                    "type": "string",
                    "description": "plugin library name"
                  },
                  "schema_file": {
                    "type": "string",
                    "format": "binary",
                    "description": "plugin schema file"
                  },
                  "so_file": {
                    "type": "string",
                    "format": "binary",
                    "description": "plugin so file"
                  }
                },
                "required": [
                  "library",
                  "schema_file",
                  "so_file"
                ],
                "x-apifox-orders": [
                  "library",
                  "schema_file",
                  "so_file"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "library info invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "library info invalid",
                    "value": {
                      "error": 2302
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076787-run"
      },
      "delete": {
        "summary": "Del Plugin",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "plugin": {
                    "type": "string",
                    "description": "plugin name"
                  }
                },
                "required": [
                  "plugin"
                ],
                "x-apifox-orders": [
                  "plugin"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076788-run"
      },
      "get": {
        "summary": "Get Plugin",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "plugin",
            "in": "query",
            "description": "plugin name",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "plugins": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "description": "plugin kind",
                            "type": "integer"
                          },
                          "node_type": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string",
                            "description": "plugin name"
                          },
                          "library": {
                            "type": "string",
                            "description": "plugin library name"
                          },
                          "description": {
                            "type": "string"
                          },
                          "description_zh": {
                            "type": "string"
                          },
                          "schema": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "kind",
                          "node_type",
                          "name",
                          "library",
                          "description",
                          "description_zh",
                          "schema"
                        ],
                        "x-apifox-orders": [
                          "kind",
                          "node_type",
                          "name",
                          "library",
                          "description",
                          "description_zh",
                          "schema"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    }
                  },
                  "required": [
                    "plugins"
                  ],
                  "x-apifox-orders": [
                    "plugins"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "plugins": [
                        {
                          "kind": 1,
                          "node_type": 1,
                          "name": "Modbus TCP",
                          "library": "libplugin-modbus-tcp.so",
                          "description": "description",
                          "description_zh": "描述",
                          "schema": "modbus-tcp"
                        },
                        {
                          "kind": 1,
                          "node_type": 2,
                          "name": "MQTT",
                          "library": "libplugin-mqtt.so",
                          "description": "Neuron northbound MQTT plugin bases on NanoSDK.",
                          "description_zh": "基于 NanoSDK 的 Neuron 北向应用 MQTT 插件",
                          "schema": "mqtt"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076789-run"
      }
    },
    "/api/neuron/schema": {
      "get": {
        "summary": "Get Plugin Schema",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "schema_name",
            "in": "query",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tag_regex": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer"
                          },
                          "regex": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "regex"
                        ],
                        "x-apifox-orders": [
                          "type",
                          "regex"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    },
                    "group_interval": {
                      "type": "integer"
                    },
                    "connection_mode": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "name_zh": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "description_zh": {
                          "type": "string"
                        },
                        "attribute": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "default": {
                          "type": "integer"
                        },
                        "valid": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "key",
                                  "value"
                                ],
                                "x-apifox-orders": [
                                  "key",
                                  "value"
                                ],
                                "x-apifox-ignore-properties": []
                              }
                            }
                          },
                          "required": [
                            "map"
                          ],
                          "x-apifox-orders": [
                            "map"
                          ],
                          "x-apifox-ignore-properties": []
                        }
                      },
                      "required": [
                        "name",
                        "name_zh",
                        "description",
                        "description_zh",
                        "attribute",
                        "type",
                        "default",
                        "valid"
                      ],
                      "x-apifox-orders": [
                        "name",
                        "name_zh",
                        "description",
                        "description_zh",
                        "attribute",
                        "type",
                        "default",
                        "valid"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "interval": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "name_zh": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "description_zh": {
                          "type": "string"
                        },
                        "attribute": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "default": {
                          "type": "integer"
                        },
                        "valid": {
                          "type": "object",
                          "properties": {
                            "min": {
                              "type": "integer"
                            },
                            "max": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "min",
                            "max"
                          ],
                          "x-apifox-orders": [
                            "min",
                            "max"
                          ],
                          "x-apifox-ignore-properties": []
                        }
                      },
                      "required": [
                        "name",
                        "name_zh",
                        "description",
                        "description_zh",
                        "attribute",
                        "type",
                        "default",
                        "valid"
                      ],
                      "x-apifox-orders": [
                        "name",
                        "name_zh",
                        "description",
                        "description_zh",
                        "attribute",
                        "type",
                        "default",
                        "valid"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "host": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "name_zh": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "description_zh": {
                          "type": "string"
                        },
                        "attribute": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "valid": {
                          "type": "object",
                          "properties": {
                            "regex": {
                              "type": "string"
                            },
                            "length": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "regex",
                            "length"
                          ],
                          "x-apifox-orders": [
                            "regex",
                            "length"
                          ],
                          "x-apifox-ignore-properties": []
                        }
                      },
                      "required": [
                        "name",
                        "name_zh",
                        "description",
                        "description_zh",
                        "attribute",
                        "type",
                        "valid"
                      ],
                      "x-apifox-orders": [
                        "name",
                        "name_zh",
                        "description",
                        "description_zh",
                        "attribute",
                        "type",
                        "valid"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "port": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "name_zh": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "description_zh": {
                          "type": "string"
                        },
                        "attribute": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "default": {
                          "type": "integer"
                        },
                        "valid": {
                          "type": "object",
                          "properties": {
                            "min": {
                              "type": "integer"
                            },
                            "max": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "min",
                            "max"
                          ],
                          "x-apifox-orders": [
                            "min",
                            "max"
                          ],
                          "x-apifox-ignore-properties": []
                        }
                      },
                      "required": [
                        "name",
                        "name_zh",
                        "description",
                        "description_zh",
                        "attribute",
                        "type",
                        "default",
                        "valid"
                      ],
                      "x-apifox-orders": [
                        "name",
                        "name_zh",
                        "description",
                        "description_zh",
                        "attribute",
                        "type",
                        "default",
                        "valid"
                      ],
                      "x-apifox-ignore-properties": []
                    },
                    "timeout": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "name_zh": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "description_zh": {
                          "type": "string"
                        },
                        "attribute": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "default": {
                          "type": "integer"
                        },
                        "valid": {
                          "type": "object",
                          "properties": {
                            "min": {
                              "type": "integer"
                            },
                            "max": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "min",
                            "max"
                          ],
                          "x-apifox-orders": [
                            "min",
                            "max"
                          ],
                          "x-apifox-ignore-properties": []
                        }
                      },
                      "required": [
                        "name",
                        "name_zh",
                        "description",
                        "description_zh",
                        "attribute",
                        "type",
                        "default",
                        "valid"
                      ],
                      "x-apifox-orders": [
                        "name",
                        "name_zh",
                        "description",
                        "description_zh",
                        "attribute",
                        "type",
                        "default",
                        "valid"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "required": [
                    "tag_regex",
                    "group_interval",
                    "connection_mode",
                    "interval",
                    "host",
                    "port",
                    "timeout"
                  ],
                  "x-apifox-orders": [
                    "tag_regex",
                    "group_interval",
                    "connection_mode",
                    "interval",
                    "host",
                    "port",
                    "timeout"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "tag_regex": [
                        {
                          "type": 3,
                          "regex": "^[0-9]+![3-4][0-9]+(#B|#L|)$"
                        },
                        {
                          "type": 4,
                          "regex": "^[0-9]+![3-4][0-9]+(#B|#L|)$"
                        },
                        {
                          "type": 5,
                          "regex": "^[0-9]+![3-4][0-9]+(#BB|#BL|#LL|#LB|)$"
                        },
                        {
                          "type": 6,
                          "regex": "^[0-9]+![3-4][0-9]+(#BB|#BL|#LL|#LB|)$"
                        },
                        {
                          "type": 7,
                          "regex": "^[0-9]+![3-4][0-9]+(#B|#L|)$"
                        },
                        {
                          "type": 8,
                          "regex": "^[0-9]+![3-4][0-9]+(#B|#L|)$"
                        },
                        {
                          "type": 9,
                          "regex": "^[0-9]+![3-4][0-9]+(#BB|#BL|#LL|#LB|)$"
                        },
                        {
                          "type": 10,
                          "regex": "^[0-9]+![3-4][0-9]+(#B|#L|)$"
                        },
                        {
                          "type": 11,
                          "regex": "^[0-9]+!([0-1][0-9]+|[3-4][0-9]+\\.([0-9]|[0-1][0-5]))$"
                        },
                        {
                          "type": 13,
                          "regex": "^[0-9]+![3-4][0-9]+\\.[0-9]+(H|L|)$"
                        }
                      ],
                      "group_interval": 1000,
                      "connection_mode": {
                        "name": "Connection Mode",
                        "name_zh": "连接模式",
                        "description": "Neuron as the client, or as the server",
                        "description_zh": "Neuron 作为客户端或服务端",
                        "attribute": "required",
                        "type": "map",
                        "default": 0,
                        "valid": {
                          "map": [
                            {
                              "key": "Client",
                              "value": 0
                            },
                            {
                              "key": "Server",
                              "value": 1
                            }
                          ]
                        }
                      },
                      "interval": {
                        "name": "Send Interval",
                        "name_zh": "指令发送间隔",
                        "description": "Send reading instruction interval(ms)",
                        "description_zh": "发送读指令时间间隔，单位为毫秒",
                        "attribute": "required",
                        "type": "int",
                        "default": 20,
                        "valid": {
                          "min": 0,
                          "max": 3000
                        }
                      },
                      "host": {
                        "name": "IP Address",
                        "name_zh": "IP地址",
                        "description": "Local IP in server mode, remote device IP in client mode",
                        "description_zh": "服务端模式中填写本地 IP，客户端模式中填写目标设备 IP",
                        "attribute": "required",
                        "type": "string",
                        "valid": {
                          "regex": "/^((2[0-4]\\d|25[0-5]|[01]?\\d\\d?)\\.){3}(2[0-4]\\d|25[0-5]|[01]?\\d\\d?)$/",
                          "length": 30
                        }
                      },
                      "port": {
                        "name": "Port",
                        "name_zh": "端口号",
                        "description": "Local port in server mode, remote device port in client mode",
                        "description_zh": "服务端模式中填写本地端口号，客户端模式中填写远程设备端口号",
                        "attribute": "required",
                        "type": "int",
                        "default": 502,
                        "valid": {
                          "min": 1,
                          "max": 65535
                        }
                      },
                      "timeout": {
                        "name": "Connection Timeout",
                        "name_zh": "连接超时时间",
                        "description": "Connection timeout(ms)",
                        "description_zh": "连接超时时间，单位为毫秒",
                        "attribute": "required",
                        "type": "int",
                        "default": 3000,
                        "valid": {
                          "min": 1000,
                          "max": 65535
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076790-run"
      }
    },
    "/api/neuron/subscribe": {
      "post": {
        "summary": "Subscribe",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app": {
                    "description": "app name",
                    "type": "string"
                  },
                  "driver": {
                    "description": "substring match against driver name",
                    "type": "string"
                  },
                  "group": {
                    "description": "substring match against group name",
                    "type": "string"
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "topic": {
                        "description": "optional, when using the MQTT plugin, the topic field needs to be added",
                        "type": "string"
                      }
                    },
                    "description": "when using the MQTT plugin, the topic field needs to be added",
                    "x-apifox-orders": [
                      "topic"
                    ],
                    "x-apifox-ignore-properties": []
                  }
                },
                "required": [
                  "app",
                  "driver",
                  "group"
                ],
                "x-apifox-orders": [
                  "app",
                  "driver",
                  "group",
                  "params"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "app": "mqtt",
                "driver": "modbus-tcp",
                "group": "group-1",
                "params": {
                  "topic": "/neuron/mqtt/group-1"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "group not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "group not exist",
                    "value": {
                      "error": 2106
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076791-run"
      },
      "put": {
        "summary": "Update Subscribe Parameters",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app": {
                    "description": "app name",
                    "type": "string"
                  },
                  "driver": {
                    "description": "deliver name",
                    "type": "string"
                  },
                  "group": {
                    "type": "string",
                    "description": "driver node group name"
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "topic": {
                        "type": "string",
                        "description": "when using the MQTT plugin, the topic key is the upload topic"
                      }
                    },
                    "required": [
                      "topic"
                    ],
                    "x-apifox-orders": [
                      "topic"
                    ],
                    "x-apifox-ignore-properties": []
                  }
                },
                "required": [
                  "app",
                  "driver",
                  "group",
                  "params"
                ],
                "x-apifox-orders": [
                  "app",
                  "driver",
                  "group",
                  "params"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "group not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "group not exist",
                    "value": {
                      "error": 2106
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076792-run"
      },
      "delete": {
        "summary": "UnSubscribe",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app": {
                    "description": "app name",
                    "type": "string"
                  },
                  "driver": {
                    "description": "driver  name",
                    "type": "string"
                  },
                  "group": {
                    "description": "driver node group name",
                    "type": "string"
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "topic": {
                        "description": "optional, when using the MQTT plugin, the topic field needs to be added",
                        "type": "string"
                      }
                    },
                    "required": [
                      "topic"
                    ],
                    "description": "optional, when using the MQTT plugin, the topic field needs to be added",
                    "x-apifox-orders": [
                      "topic"
                    ],
                    "x-apifox-ignore-properties": []
                  }
                },
                "required": [
                  "app",
                  "driver",
                  "group",
                  "params"
                ],
                "x-apifox-orders": [
                  "app",
                  "driver",
                  "group",
                  "params"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "app": "mqtt",
                "driver": "modbus-tcp",
                "group": "group-1",
                "params": {
                  "topic": "/neuron/mqtt/group-1"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "group not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "group not exist",
                    "value": {
                      "error": 2106
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076793-run"
      },
      "get": {
        "summary": "Get Subscribe Group",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [
          {
            "name": "app",
            "in": "query",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "driver": {
                            "description": "deliver name",
                            "type": "string"
                          },
                          "group": {
                            "description": "group name",
                            "type": "string"
                          },
                          "params": {
                            "type": "object",
                            "properties": {
                              "topic": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "topic"
                            ],
                            "description": "when using the MQTT plugin, the topic field needs to be added",
                            "x-apifox-orders": [
                              "topic"
                            ],
                            "x-apifox-ignore-properties": []
                          }
                        },
                        "required": [
                          "driver",
                          "group",
                          "params"
                        ],
                        "x-apifox-orders": [
                          "driver",
                          "group",
                          "params"
                        ],
                        "x-apifox-ignore-properties": []
                      }
                    }
                  },
                  "required": [
                    "groups"
                  ],
                  "x-apifox-orders": [
                    "groups"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "groups": [
                        {
                          "driver": "modbus-tcp",
                          "group": "group-1",
                          "params": {
                            "topic": "/neuron/mqtt/group-1"
                          }
                        },
                        {
                          "driver": "modbus-tcp",
                          "group": "group-2",
                          "params": {
                            "topic": "/neuron/mqtt/group-2"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076794-run"
      }
    },
    "/api/neuron/subscribes": {
      "post": {
        "summary": "Subscribe Multiple Groups",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app": {
                    "type": "string",
                    "description": "app n"
                  },
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "driver": {
                          "description": "deliver name",
                          "type": "string"
                        },
                        "group": {
                          "description": "group name",
                          "type": "string"
                        },
                        "params": {
                          "type": "object",
                          "properties": {
                            "topic": {
                              "description": "when using the MQTT plugin, the topic key is the upload topoic",
                              "type": "string"
                            }
                          },
                          "required": [
                            "topic"
                          ],
                          "description": "optional, depends on plugins",
                          "x-apifox-orders": [
                            "topic"
                          ],
                          "x-apifox-ignore-properties": []
                        }
                      },
                      "required": [
                        "driver",
                        "group",
                        "params"
                      ],
                      "x-apifox-orders": [
                        "driver",
                        "group",
                        "params"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  }
                },
                "required": [
                  "app",
                  "groups"
                ],
                "x-apifox-orders": [
                  "app",
                  "groups"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "app": "mqtt",
                "groups": [
                  {
                    "driver": "modbus1",
                    "group": "group1",
                    "params": {
                      "topic": "/neuron/mqtt/modbus1/group1"
                    }
                  },
                  {
                    "driver": "modbus2",
                    "group": "group2",
                    "params": {
                      "topic": "/neuron/mqtt/modbus2/group2"
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "suceess",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "group not exist",
                    "value": {
                      "error": 2106
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076795-run"
      }
    },
    "/api/neuron/version": {
      "get": {
        "summary": "Get Version",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "build_date": {
                      "type": "string"
                    },
                    "revision": {
                      "description": "dirty indicates uncommit changes",
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "build_date",
                    "revision",
                    "version"
                  ],
                  "x-apifox-orders": [
                    "build_date",
                    "revision",
                    "version"
                  ],
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "build_date": "2022-06-01",
                      "revision": "99e2184+dirty",
                      "version": "2.4.0"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "internal error",
                    "value": {
                      "error": 1001
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076796-run"
      }
    },
    "/api/neuron/logs": {
      "get": {
        "summary": "Download log files",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Record does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "file not exist",
                    "value": {
                      "error": 1011
                    }
                  },
                  "2": {
                    "summary": "command execution failed",
                    "value": {
                      "error": 1014
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "internal error",
                    "value": {
                      "error": 1001
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076797-run"
      }
    },
    "/api/neuron/log/level": {
      "put": {
        "summary": "Update node log level",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Call the api to modify the log level of the node to debug, and automatically switch to the default level in about ten minutes.",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "node": {
                    "type": "string",
                    "description": "node name"
                  },
                  "level": {
                    "type": "string",
                    "description": "log level ,could be debug、info、notice、warn、error、fatal"
                  },
                  "core": {
                    "type": "string",
                    "description": "whether to switch the core log level.The core field is optional and defaults to true."
                  }
                },
                "required": [
                  "level"
                ],
                "x-apifox-orders": [
                  "node",
                  "level",
                  "core"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "success",
                    "value": {
                      "error": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Record does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "node not exist",
                    "value": {
                      "error": 2003
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "server is busy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "server is busy",
                    "value": {
                      "error": 1010
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076798-run"
      }
    },
    "/api/neuron/global/drivers": {
      "put": {
        "summary": "Put Drivers",
        "x-apifox-folder": "Neuron/configuration",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "tags": [
          "Neuron/configuration"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "plugin": {
                    "type": "string"
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "param1": {
                        "type": "integer",
                        "description": ""
                      },
                      "param2": {
                        "type": "string",
                        "description": ""
                      },
                      "param3": {
                        "type": "bool",
                        "description": ""
                      },
                      "param4": {
                        "type": "integer",
                        "description": ""
                      }
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "interval": {
                            "type": "integer"
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "integer"
                                },
                                "address": {
                                  "type": "string"
                                },
                                "attribute": {
                                  "type": "integer"
                                },
                                "precison": {
                                  "type": "integer"
                                },
                                "decimal": {
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "name",
                                "type",
                                "address",
                                "attribute"
                              ],
                              "x-apifox-orders": [
                                "name",
                                "type",
                                "address",
                                "attribute",
                                "precison",
                                "decimal"
                              ]
                            }
                          }
                        },
                        "x-apifox-orders": [
                          "name",
                          "interval",
                          "tags"
                        ]
                      }
                    },
                    "x-apifox-orders": [
                      "param1",
                      "param2",
                      "param3",
                      "param4"
                    ],
                    "x-apifox-ignore-properties": []
                  },
                  "required": {
                    "type": "string"
                  },
                  "x-apifox-orders": {
                    "type": "string"
                  }
                },
                "x-apifox-orders": [
                  "name",
                  "plugin",
                  "params",
                  "required",
                  "x-apifox-orders"
                ],
                "examples": [
                  {
                    "nodes": [
                      {
                        "name": "rtu template",
                        "plugin": "Modbus RTU",
                        "params": {
                          "param1": 1,
                          "param2": "1.1.1.1",
                          "param3": true,
                          "param4": 11.22
                        },
                        "groups": [
                          {
                            "name": "group1",
                            "interval": 2000,
                            "tags": [
                              {
                                "name": "tag1",
                                "type": 4,
                                "address": "1!400001",
                                "attribute": 1,
                                "precison": 1,
                                "decimal": 0
                              },
                              {
                                "name": "tag2",
                                "type": 11,
                                "address": "1!400009",
                                "attribute": 3
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ],
                "x-apifox-ignore-properties": []
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/5225015/apis/api-219076799-run"
      }
    }
  },
  "components": {
    "schemas": {}
  },
  "servers": []
}